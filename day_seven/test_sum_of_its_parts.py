import pytest
from sum_of_its_parts import topo_sort, topo_sort_with_time

@pytest.mark.parametrize("edges,result", [
    ([(2,0), (2,5), (0,1), (0,3), (1,4), (3,4), (5,4)], [2, 0, 1, 3, 5, 4]),
    ([('G', 'W'), ('X', 'S'), ('F', 'V'), ('C', 'Y'), ('M', 'J'), ('K', 'Z'), ('U', 'W'), ('I', 'H'), ('W', 'B'), ('A', 'Y'), ('Y', 'D'), ('S', 'Q'), ('N', 'V'), ('H', 'D'), ('D', 'Q'), ('L', 'E'), ('Q', 'E'), ('T', 'R'), ('J', 'P'), ('R', 'E'), ('E', 'V'), ('O', 'P'), ('P', 'B'), ('Z', 'V'), ('B', 'V'), ('Y', 'B'), ('C', 'B'), ('Q', 'T'), ('W', 'P'), ('X', 'Z'), ('L', 'T'), ('G', 'Y'), ('Y', 'R'), ('E', 'B'), ('X', 'E'), ('Y', 'V'), ('H', 'L'), ('L', 'J'), ('S', 'T'), ('F', 'T'), ('Y', 'J'), ('A', 'H'), ('P', 'Z'), ('R', 'O'), ('X', 'F'), ('I', 'O'), ('Y', 'Q'), ('S', 'D'), ('Q', 'B'), ('C', 'D'), ('Y', 'N'), ('O', 'Z'), ('G', 'D'), ('A', 'O'), ('U', 'N'), ('Y', 'P'), ('E', 'O'), ('I', 'Q'), ('W', 'O'), ('D', 'B'), ('Z', 'B'), ('L', 'B'), ('P', 'V'), ('C', 'E'), ('S', 'O'), ('U', 'T'), ('U', 'O'), ('Y', 'L'), ('N', 'L'), ('Q', 'Z'), ('U', 'L'), ('U', 'D'), ('J', 'O'), ('L', 'R'), ('S', 'P'), ('H', 'R'), ('F', 'I'), ('D', 'T'), ('C', 'M'), ('W', 'D'), ('R', 'V'), ('U', 'S'), ('K', 'R'), ('D', 'V'), ('D', 'R'), ('I', 'E'), ('L', 'O'), ('T', 'Z'), ('A', 'E'), ('D', 'Z'), ('H', 'V'), ('A', 'L'), ('W', 'R'), ('F', 'A'), ('Y', 'Z'), ('I', 'P'), ('F', 'J'), ('H', 'B'), ('G', 'Z'), ('C', 'K'), ('D', 'E')], ['C', 'G', 'K', 'M', 'U', 'W', 'X', 'F', 'A', 'I', 'H', 'S', 'Y', 'D', 'N', 'L', 'J', 'Q', 'T', 'R', 'E', 'O', 'P', 'Z', 'B', 'V'])
    ])
def test_topo_sort(edges, result):
    assert topo_sort(edges) == result

@pytest.mark.parametrize("edges,nof_workers,result", [
    ([('A','B')], 1, 123),
    ([('G', 'W'), ('X', 'S'), ('F', 'V'), ('C', 'Y'), ('M', 'J'), ('K', 'Z'), ('U', 'W'), ('I', 'H'), ('W', 'B'), ('A', 'Y'), ('Y', 'D'), ('S', 'Q'), ('N', 'V'), ('H', 'D'), ('D', 'Q'), ('L', 'E'), ('Q', 'E'), ('T', 'R'), ('J', 'P'), ('R', 'E'), ('E', 'V'), ('O', 'P'), ('P', 'B'), ('Z', 'V'), ('B', 'V'), ('Y', 'B'), ('C', 'B'), ('Q', 'T'), ('W', 'P'), ('X', 'Z'), ('L', 'T'), ('G', 'Y'), ('Y', 'R'), ('E', 'B'), ('X', 'E'), ('Y', 'V'), ('H', 'L'), ('L', 'J'), ('S', 'T'), ('F', 'T'), ('Y', 'J'), ('A', 'H'), ('P', 'Z'), ('R', 'O'), ('X', 'F'), ('I', 'O'), ('Y', 'Q'), ('S', 'D'), ('Q', 'B'), ('C', 'D'), ('Y', 'N'), ('O', 'Z'), ('G', 'D'), ('A', 'O'), ('U', 'N'), ('Y', 'P'), ('E', 'O'), ('I', 'Q'), ('W', 'O'), ('D', 'B'), ('Z', 'B'), ('L', 'B'), ('P', 'V'), ('C', 'E'), ('S', 'O'), ('U', 'T'), ('U', 'O'), ('Y', 'L'), ('N', 'L'), ('Q', 'Z'), ('U', 'L'), ('U', 'D'), ('J', 'O'), ('L', 'R'), ('S', 'P'), ('H', 'R'), ('F', 'I'), ('D', 'T'), ('C', 'M'), ('W', 'D'), ('R', 'V'), ('U', 'S'), ('K', 'R'), ('D', 'V'), ('D', 'R'), ('I', 'E'), ('L', 'O'), ('T', 'Z'), ('A', 'E'), ('D', 'Z'), ('H', 'V'), ('A', 'L'), ('W', 'R'), ('F', 'A'), ('Y', 'Z'), ('I', 'P'), ('F', 'J'), ('H', 'B'), ('G', 'Z'), ('C', 'K'), ('D', 'E')], 5, 1046)
    ])
def test_topo_sort_with_time(edges, nof_workers, result):
    assert topo_sort_with_time(edges, nof_workers) == result
